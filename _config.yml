title: Roshan Gardi
subtitle: Well, hello. Bonjour, salut.
description: >- # this means to ignore newlines until "baseurl:"
# devlopr-jekyll is a beautiful Jekyll Theme Built For Developers, which is optimized for speed and readability.

url: "" # the base hostname & protocol for your site, e.g. https://example.github.io
baseurl: "" # the subpath of your site, e.g. /blog

urls:
    - text: Home
      url: /
    - text: About
      url: /about
    - text: Blog
      url: /blog
    - text: Gallery
      url: /gallery
    # - text: Shop
    #   url : /shop
    - text: Contact
      url : /contact
    # - text: Styleguide
    #   url: /styleguide
    # - text: Get Started
    #   url: /get-started

# Edit Author details (For multi authors check _data/authors.yml)

author_logo: profile.png
author: Roshan Gardi
author_bio: Hi Everyone! My name is Roshan and I am a graduate student in Computer Science at California State University Long Beach. Prior to this, I worked as a DevOps Engineer for 3+ years. There, I worked on various tools and technologies including Jenkins, Docker, Kuberentes, AWS, Terraform, Newrelic and Mulesoft. I have also earned my AWS Solutions Architect certification. As of April 2021, I am working as a Student Assistant as well as Research Assistant at my University, and my work include python scripting automation. As of today, 30% of the manual tasks have been automated.
author_email: "mail@roshan.gardi002@gmail.com"
author_location: Los Angeles, USA.
author_website_url: "https://roshangardi.github.io/"
typewrite-text: I'm a DevOps Engineer and a software development enthusiast :D

# Experiences
author_work_experiences:
            - company_name: Capgemini
              company_logo: capgemini.PNG
              company_url: https://www.capgemini.com/us-en/
              designation: DevOps Engineer  (2017 - 2020)
              description: Refactored a monolithic legacy application to microservices using CI/CD Jenkins pipeline, Orchestration Platform such as Docker, Kubernetes and Cloud technologies like AWS.
              visibility: true
            - company_name: Califonia State University Long Beach
              company_logo: CSULB.png
              company_url: https://www.csulb.edu/
              designation: Research Assistant  (2021 - Present)
              description: Design and implement a web-based GUI application that models the operation of a steam turbine using Python Django Framework and Javascript.
              visibility: true
            - company_name: Califonia State University Long Beach
              company_logo: CSULB.png
              company_url: https://www.csulb.edu/
              designation: Student Assistant  (2021 - Present)
              description: Python scripting automation. Working with operations team to improve backend systems.
              visibility: true

# Education
author_education_details:
              - college_logo: CSULB.png
                college_name: California State University Long Beach
                college_url: https://www.csulb.edu/
                college_degree: Computer Science
                description: Masters in Computer Science
                visibility: true

# Projects
author_project_details:
              - project_thumbnail: PythonBlogApplication.PNG
                project_title: Python Blog Application
                project_description: Built a blogging application in Python Flask Framework
                project_url: https://github.com/roshangardi/Flask_Blog
                visibility: true
              - project_thumbnail: FunctionPointAnalysis.PNG
                project_title: Function Point Analysis - GUI Application
                project_description: FPA is a desktop GUI application developed in Python PyQT framework. It is a technique used to measure software requirements based on the different functions that the requirement can be split into. Each function is assigned with some points based on the FPA rules and then these points are summarized using the FPA formula. The final figure shows the total man-hours required to achieve the complete requirement. 
                project_url: https://github.com/roshangardi/FunctionPointGUI
                visibility: true

# social links
twitter_username: roshangardi
github_username:  roshangardi
facebook_username: roshangardi
linkedin_username: roshangardi
behance_username: roshangardi
instagram_username: roshangardi
medium_username: roshangardi
telegram_username: roshangardi
dribbble_username: roshangardi
flickr_username: roshangardi

#for comments ( we got Disqus and Hyvor Commenting, uncomment the one you want to use )

# disqus_shortname: roshan-gardi
hyvor_talk_website_id: 476

# wakatime username (coding activity)
wakatime_username: roshangardi

# mailchimp embedded form url (newsletter):
mailchimp_form_url: https://roshangardi.us10.list-manage.com/subscribe/post?u=50bab1c85eae24ecfb0f68361&amp;id=3a2dd721d0

# formspree (contact form)
formspree_email: roshan.gardi002@gmail.com

# syntax highlighter
markdown: kramdown
highlighter: rouge
permalink: pretty

# Choose what to show ( can be true or false)
show_author_work_experiences: true
show_author_education_details: true
show_author_project_details: true

# pagination of posts
paginate: 4
per_page: 4
paginate_path: "/blog/page/:num/"

# minify
# compress_html:
#   clippings: all
#   comments: ["<!-- ", " -->"]
#   endings: all
#   ignore:
#     envs: ['development']

# Archives
# jekyll-archives:
#   enabled:
#     - categories
#   layout: archive
#   permalinks:
#     category: '/category/:name/'

collections:
  products:
    output: true
  authors:
    output: true

defaults:
  -
    scope:
      path: "gallery"
    values:
      permalink: /:path/:basename:output_ext
  -
    scope:
      path: ""
      type: authors
    values:
      layout: author
      permalink: /blog/authors/:slug

# Build settings
plugins:
  - jekyll-paginate
  - jekyll-gist
  - jekyll-seo-tag
  - jekyll-sitemap
  - jekyll-menus


# Exclude from processing.
# The following items will not be processed, by default.
# Any item listed under the `exclude:` key here will be automatically added to
# the internal "default list".
#
# Excluded items can be processed by explicitly listing the directories or
# their entries' file path in the `include:` list.
#
exclude:
  - .sass-cache/
  - .jekyll-cache/
  - gemfiles/
  - Gemfile
  - Gemfile.lock
  - node_modules/
  - vendor/bundle/
  - vendor/cache/
  - vendor/gems/
  - vendor/ruby/

destination: ./build
